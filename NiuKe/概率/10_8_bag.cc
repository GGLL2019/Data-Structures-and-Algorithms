/**
 * @brief 蓄水池抽样算法：
 *   1.处理1-k号球时，直接放入袋子中
 *   2.处理第i号球(此时i大于k)的时候，以k/i的概率决定是否把i号球放入袋中，若放入还要在袋子中随机扔掉一个
 * @email xueliang2007@qq.com
 * @date  2019.10.08
 */


/*
 * 题目：
 *   有一个机器按自然数序列的方式吐出球，1号球，2号球，3号球等等。你有一个袋子，袋子里最多只能装下K个球，
 *   并且除袋子以外，你没有更多的空间，一个球一旦扔掉，就再也不可拿回。设计一种选择方式，使得当机器吐出第N号球的时候，
 *   你袋子中的球数是K个，同时可以保证从1号球到N号球中的每一个，被选进袋子的概率都是K/N。举一个更具体的例子，
 *   有一个只能装下10个球的袋子，当吐出100个球时，袋子里有10 球，并且1~100号中的每一个球被选中的概率都是10/100。
 *   然后继续吐球，当吐出1000个球时，袋子里有 10 个球，并且1~1000号中的每一个球被选中的概率都是10/1000。继续吐球，
 *   当吐出i个球时，袋子里有10个球，并且1~i号中的每一个球被选中的概率都是10/i。也就是随着N的变化，
 *   1~N号球被选中的概率动态变化成k/N。请将吐出第N个球时袋子中的球的编号返回。
 *
 * */

#include <stdlib.h>
#include <iostream>
#include <vector>

using std::vector;

class Bag {
public:
    vector<int> ret;
    // 每次拿一个球都会调用这个函数，N表示第i次调用
    vector<int> carryBalls(int N, int k) {
        if(N<=k){
            ret.push_back(N);
        }
        else{
            int r=rand()%N;
            //压入概率k/N
            if(r<k)//随机等概率吐出球
                ret[r]=N;
        }
        return ret;
    }
};
